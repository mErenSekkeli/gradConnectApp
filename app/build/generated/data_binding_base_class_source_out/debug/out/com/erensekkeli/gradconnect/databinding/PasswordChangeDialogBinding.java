// Generated by view binder compiler. Do not edit!
package com.erensekkeli.gradconnect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.erensekkeli.gradconnect.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PasswordChangeDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button changePasswordButton;

  @NonNull
  public final ImageView dialogCancelButton;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final EditText newPassword;

  @NonNull
  public final EditText newPasswordAgain;

  @NonNull
  public final TextView textView2;

  private PasswordChangeDialogBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button changePasswordButton, @NonNull ImageView dialogCancelButton,
      @NonNull LinearLayout linearLayout, @NonNull EditText newPassword,
      @NonNull EditText newPasswordAgain, @NonNull TextView textView2) {
    this.rootView = rootView;
    this.changePasswordButton = changePasswordButton;
    this.dialogCancelButton = dialogCancelButton;
    this.linearLayout = linearLayout;
    this.newPassword = newPassword;
    this.newPasswordAgain = newPasswordAgain;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PasswordChangeDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PasswordChangeDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.password_change_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PasswordChangeDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.changePasswordButton;
      Button changePasswordButton = ViewBindings.findChildViewById(rootView, id);
      if (changePasswordButton == null) {
        break missingId;
      }

      id = R.id.dialog_cancel_button;
      ImageView dialogCancelButton = ViewBindings.findChildViewById(rootView, id);
      if (dialogCancelButton == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.newPassword;
      EditText newPassword = ViewBindings.findChildViewById(rootView, id);
      if (newPassword == null) {
        break missingId;
      }

      id = R.id.newPasswordAgain;
      EditText newPasswordAgain = ViewBindings.findChildViewById(rootView, id);
      if (newPasswordAgain == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new PasswordChangeDialogBinding((ConstraintLayout) rootView, changePasswordButton,
          dialogCancelButton, linearLayout, newPassword, newPasswordAgain, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
